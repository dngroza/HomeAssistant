homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: 45.8833
  longitude: 22.9
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 196
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: Europe/Bucharest
  customize: !include customize.yaml

# Show links to resources in log and frontend
#introduction:

# Enables the frontend
frontend:

mqtt:

history_graph:

light:
  - platform: mqtt_json
    name: "SN1 LED"
    state_topic: "bruh/sensornode1"
    command_topic: "bruh/sensornode1/set"
    brightness: true
    flash: true
    rgb: true
    optimistic: false
    qos: 0


sensor:
  - platform: mqtt
    state_topic: "bruh/sensornode1"
    name: "SN1 Solar"
    unit_of_measurement: "°C"
    value_template: '{{ value_json.solartemp | round(1) }}'
    icon: mdi:thermometer-lines    

  - platform: mqtt  
    state_topic: "bruh/sensornode1"  
    name: "SN1 Humidity"  
    unit_of_measurement: "%"  
    value_template: '{{ value_json.humidity | round(1) }}'  
  
  - platform: mqtt  
    state_topic: "bruh/sensornode1"  
    name: "SN1 LDR"
    ##This sensor is not calibrated to actual LUX. Rather, this a map of the input voltage ranging from 0 - 1023.
    unit_of_measurement: "LUX"  
    value_template: '{{ value_json.ldr }}'  
  
  - platform: mqtt  
    state_topic: "bruh/sensornode1"  
    name: "SN1 PIR"  
    value_template: '{{ value_json.motion }}'  
  
  - platform: mqtt  
    state_topic: "bruh/sensornode1"  
    name: "SN1 Temperature"  
    unit_of_measurement: "°F"  
    value_template: '{{ value_json.temperature | round(1) }}'  

  - platform: mqtt
    state_topic: "bruh/sensornode1"
    name: "SN1 Real Feel"
    unit_of_measurement: "°F"
    value_template: '{{ value_json.heatIndex | round(1) }}'

#  - platform: yr

#  - platform: template
#    sensors:
#      battery_iphone:
#        unit_of_measurement: '%'
#        value_template: >-
#            {%- if states.device_tracker.iphone.attributes.battery %}
#                {{ states.device_tracker.iphone.attributes.battery|round }}
#            {% else %}
#                {{ states.sensor.battery_iphone.state }}
#            {%- endif %}

switch:
  - platform: rpi_gpio
    initial_state: True
    ports:
      17: Bec

# Enables configuration UI
config:

http:
  # Uncomment this to add a password (recommended!)
   api_password: PiHome
  # Uncomment this if you are using SSL/TLS, running in Docker container, etc.
  # base_url: example.duckdns.org:8123

# Checks for available updates
# Note: This component will send some information about your system to
# the developers to assist with development of Home Assistant.
# For more information, please see:
# https://home-assistant.io/blog/2016/10/25/explaining-the-updater/
updater:
  # Optional, allows Home Assistant developers to focus on popular components.
  # include_used_components: true

# Discover some devices automatically
discovery:

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# Enables support for tracking state changes over time
history:
#  keep_days: 10

recorder:
  purge_interval: 2
  purge_keep_days: 10


# View all events in a logbook
logbook:

# Track the sun
sun:

# Weather prediction
#sensor:
#  - platform: yr

# Text to speech
tts:
  - platform: google

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml

zone:
  name: Home
  latitude: 45.738165
  longitude: 21.239225
  radius: 180
  icon: mdi:account-multiple
  track_ios: true

zone 2:
  name: Work
  latitude: 45.7289194
  longitude: 21.2332648
  radius: 180
  icon: mdi:work
  track_ios: true

device_tracker:
#   - platform: icloud
#     username: dngroza@gmail.com
#     password: 
